/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package gui;

import java.awt.BorderLayout;
import java.awt.print.PrinterAbortException;
import java.io.File;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PrintStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.*;
import net.sf.jasperreports.engine.util.*;
import net.sf.jasperreports.swing.JRViewer;
import net.sf.jasperreports.view.JasperViewer;

/**
 * Interfaz gráfica para visualizar un reporte.
 *
 * @author Jesus Rodrigo Villegas Arguelles 261186
 * @author Alejandro Rodríguez Lugo 251622
 * @author Héctor Javier Alonso Zaragoza 252039
 */
public class ReporteGeneradoForm extends javax.swing.JDialog {

    /**
     * Inicializa las variables para generar el reporte.
     */
    private final String nombre;
    private final LocalDate fechaDesde;
    private final LocalDate fechaHasta;
    private final String tipoTramite;

    /**
     * Creates new form ReporteGeneradoForm
     *
     */
    public ReporteGeneradoForm(java.awt.Frame parent, boolean modal, String nombre, LocalDate fechaDesde, LocalDate fechaHasta, String tipoTramite) {
        super(parent, modal);
        initComponents();
        this.nombre = nombre;
        this.fechaDesde = fechaDesde;
        this.fechaHasta = fechaHasta;
        this.tipoTramite = tipoTramite;
        generarReporte();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 833, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 947, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void generarReporte() {
        try {
            EntityManagerFactory emf = Persistence.createEntityManagerFactory("connectionPU");
            EntityManager em = emf.createEntityManager();
            StringBuilder sql = new StringBuilder();
            sql.append("SELECT ").append("t.id AS id_tramite, ").append("t.DTYPE AS tipo_tramite, ").append("t.costo AS costo_tramite, ").append("per.nombre AS nombre_persona, ")
                    .append("COALESCE(l.fechaExpedicion, p.fechaEmision) AS fecha_registro, ").append("l.id AS id_licencia, ").append("p.id AS id_placa ")
                    .append("FROM tramites t ").append("LEFT JOIN persona per ON per.id = t.id_persona ").append("LEFT JOIN licencia l ON l.id = t.id ").append("LEFT JOIN placa p   ON p.id = t.id ")
                    .append("WHERE 1=1 ");
            List<Object> valores = new ArrayList<>();
            if (nombre != null && !nombre.isEmpty()) {
                sql.append(" AND per.nombre LIKE ? ");
                valores.add("%" + nombre + "%");
            }
            if (tipoTramite != null && !tipoTramite.equalsIgnoreCase("Todos")) {
                sql.append(" AND t.DTYPE = ? ");
                valores.add(tipoTramite);
            }
            if (fechaDesde != null && fechaHasta != null) {
                sql.append(" AND COALESCE(l.fechaExpedicion, p.fechaEmision) BETWEEN ? AND ? ");
                valores.add(java.sql.Date.valueOf(fechaDesde));
                valores.add(java.sql.Date.valueOf(fechaHasta));
            }
            Map<String, Object> props = emf.getProperties();
            String url = (String) props.get("javax.persistence.jdbc.url");
            String user = (String) props.get("javax.persistence.jdbc.user");
            String pass = (String) props.get("javax.persistence.jdbc.password");
            String driver = (String) props.get("javax.persistence.jdbc.driver");
            Class.forName(driver);
            Connection conn = DriverManager.getConnection(url, user, pass);
            PreparedStatement ps = conn.prepareStatement(sql.toString());
            for (int i = 0; i < valores.size(); i++) {
                ps.setObject(i + 1, valores.get(i));
            }
            Statement stmt = conn.createStatement();
            ResultSet rs = ps.executeQuery();
            JRResultSetDataSource jrRS = new JRResultSetDataSource(rs);
            JasperReport jasperReport = JasperCompileManager.compileReport("jasper/jaspAgF.jrxml");
            JasperPrint jprint = JasperFillManager.fillReport(jasperReport, new HashMap<>(), jrRS);
            java.util.logging.Logger.getLogger("net.sf.jasperreports").setLevel(java.util.logging.Level.OFF);
            JRViewer viewer = new JRViewer(jprint);
            getContentPane().removeAll();
            getContentPane().setLayout(new BorderLayout());
            getContentPane().add(viewer, BorderLayout.CENTER);
            getContentPane().revalidate();
            getContentPane().repaint();
            conn.close();
        } catch (Exception e) {
            if (e.getCause() instanceof PrinterAbortException) {
                return;
            }
            JOptionPane.showMessageDialog(this, "No se pudo generar el reporte: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
