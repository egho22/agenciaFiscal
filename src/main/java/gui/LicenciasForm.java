/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package gui;

import entidades.Licencia;
import entidades.Persona;
import entidades.Tramites;
import interfaces.iLicenciaDAO;
import interfaces.iPersonasDAO;
import java.time.LocalDate;
import java.time.Month;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import persistencia.LicenciaDAO;
import persistencia.PersonasDAO;
import encriptador.Encriptador;
import java.time.Period;

/**
 * Interfaz gráfica para escoger una persona para realizar un trámite por
 * licencia.
 *
 * @author Jesus Rodrigo Villegas Arguelles 261186
 * @author Alejandro Rodríguez Lugo 251622
 * @author Héctor Javier Alonso Zaragoza 252039
 */
public class LicenciasForm extends javax.swing.JDialog {

    /**
     * Inicializa los valores para generar la licencia.
     */
    iPersonasDAO p = new PersonasDAO();
    private List<Persona> listaPersonas;
    iLicenciaDAO l = new LicenciaDAO();

    /**
     * Creates new form Licencias
     */
    public LicenciasForm(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        listaPersonas = new ArrayList<>();
        initComponents();
        cargarPersonas();
        jTextField1.setEditable(false);
        jTextField2.setEditable(false);
        jTextField3.setEditable(false);
        datePicker1.setEnabled(false);
        datePicker2.setEnabled(false);
        datePicker2.setDate(LocalDate.now());
        jTextField6.setEditable(false);
        jComboBox2.addActionListener(e -> actualizarCosto());
        jComboBox4.addActionListener(e -> actualizarCosto());
        jComboBox1.addActionListener(e -> actualizarDatos());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        btnGenerar = new javax.swing.JButton();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        datePicker1 = new com.github.lgooddatepicker.components.DatePicker();
        jLabel11 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jComboBox4 = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        datePicker2 = new com.github.lgooddatepicker.components.DatePicker();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Generar licencia");
        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N

        btnGenerar.setText("Generar licencia");
        btnGenerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarActionPerformed(evt);
            }
        });

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Normal", "Discapacitado" }));

        jLabel2.setText("Costo ($)");

        jLabel3.setText("Vigencia (años)");

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel4.setText("Tipo de licencia");

        jLabel5.setText("Selecciona la persona");

        jLabel6.setText("Nombre completo:");

        jLabel9.setText("RFC");

        jLabel10.setText("Fecha de nacimiento");

        jLabel11.setText("Teléfono");

        jTextField6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField6ActionPerformed(evt);
            }
        });

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3" }));

        jLabel7.setText("Fecha de expidición");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(125, 125, 125)
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2))
                                .addGap(55, 55, 55)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel7))
                        .addGap(70, 247, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel11)
                            .addComponent(jLabel10)
                            .addComponent(jLabel9))
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(datePicker2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(datePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnGenerar)
                                .addGap(19, 19, 19))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(datePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7)
                        .addGap(22, 22, 22))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(datePicker2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnGenerar))
                        .addContainerGap(13, Short.MAX_VALUE))))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnGenerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarActionPerformed
        // TODO add your handling code here:
        try {
            Persona personaSeleccionada = (Persona) jComboBox1.getSelectedItem();
            String RFC = jTextField2.getText();
            String nombre = jTextField3.getText();
            LocalDate fechaNacimiento = datePicker1.getDate();
            String tipoLicencia = (String) jComboBox2.getSelectedItem();
            String vigenciaTexto = (String) jComboBox4.getSelectedItem();
            String telefonoTexto = jTextField6.getText();
            int telefono = Integer.parseInt(telefonoTexto);
            int vigencia = Integer.parseInt(vigenciaTexto);
            String costoTexto = jTextField1.getText();
            int costo = Integer.parseInt(costoTexto);
            if (personaSeleccionada == null || RFC.isEmpty() || nombre.isEmpty() || fechaNacimiento == null || vigenciaTexto.isEmpty() || telefonoTexto.isEmpty() || vigenciaTexto.isEmpty() || costoTexto.isEmpty() || personaSeleccionada == null) {
                JOptionPane.showMessageDialog(this, "No puede haber datos vacíos.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            if (costo < 199) {
                JOptionPane.showMessageDialog(this, "El costo no es válido", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            Period edad = Period.between(fechaNacimiento, LocalDate.now());
            if (edad.getYears() < 18) {
                JOptionPane.showMessageDialog(this, "La persona debe ser mayor de 18 años para obtener una licencia.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            List<Licencia> listaLicencia = l.ConsultarTodos();
            for (Licencia licen : listaLicencia) {
                LocalDate fechaVencimiento = licen.getFechaExpedicion().plusYears(licen.getVigencia());
                if (licen.getPersona().getId().equals(personaSeleccionada.getId()) && !fechaVencimiento.isBefore(LocalDate.now())) {
                    JOptionPane.showMessageDialog(this, "La persona ya cuenta con una licencia vigente.", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }
            Licencia lic = new Licencia();
            lic.setPersona(personaSeleccionada);
            lic.setVigencia(vigencia);
            lic.setFechaExpedicion(datePicker2.getDate());
            lic.setCosto(costo);
            lic.setTipo(tipoLicencia);
            if (l.Agregar(lic) != true) {
                JOptionPane.showMessageDialog(this, "No se pudo agregar la licencia.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            } else {
                JOptionPane.showMessageDialog(this, "Licencia generada correctamente.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
                return;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "No puede haber datos vacíos.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnGenerarActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField6ActionPerformed

    private void actualizarDatos() {
        Persona personaSeleccionada = (Persona) jComboBox1.getSelectedItem();
        if (personaSeleccionada == null) {
            return;
        }
        jTextField2.setText(personaSeleccionada.getRFC());
        jTextField3.setText(personaSeleccionada.getNombre());
        if (personaSeleccionada.getFechaNacimiento() != null) {
            datePicker1.setDate(personaSeleccionada.getFechaNacimiento());
        } else {
            datePicker1.clear();
        }
        try {
            String telefonoDesencriptado = Encriptador.desencriptar(personaSeleccionada.getTelefono());
            jTextField6.setText(telefonoDesencriptado);
        } catch (Exception ex) {
            Logger.getLogger(LicenciasForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void actualizarCosto() {
        String tipoLicencia = (String) jComboBox2.getSelectedItem();
        String vigencia = (String) jComboBox4.getSelectedItem();
        int costo = 0;
        if (tipoLicencia == null || vigencia == null) {
            return;
        }
        if (tipoLicencia.equals("Normal")) {
            if (vigencia.equals("1")) {
                costo = 600;
            } else if (vigencia.equals("2")) {
                costo = 900;
            } else if (vigencia.equals("3")) {
                costo = 1100;
            }
        } else if (tipoLicencia.equals("Discapacitado")) {
            if (vigencia.equals("1")) {
                costo = 200;
            } else if (vigencia.equals("2")) {
                costo = 500;
            } else if (vigencia.equals("3")) {
                costo = 700;
            }
        }
        jTextField1.setText(String.valueOf(costo));
    }

    private void cargarPersonas() {
        jComboBox1.removeAllItems();
        List<Persona> pers = new ArrayList<>();
        try {
            pers = p.ConsultarTodos();
        } catch (Exception ex) {
            Logger.getLogger(LicenciasForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (Persona persona : pers) {
            jComboBox1.addItem(persona);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGenerar;
    private com.github.lgooddatepicker.components.DatePicker datePicker1;
    private com.github.lgooddatepicker.components.DatePicker datePicker2;
    private javax.swing.JComboBox<Persona> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField6;
    // End of variables declaration//GEN-END:variables
}
